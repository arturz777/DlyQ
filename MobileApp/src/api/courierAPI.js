import axios from "axios";

// üîπ –ù–∞—Å—Ç—Ä–æ–∏–º –±–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π IP)
const API_URL = "http://192.168.X.X:5000/api/couriers"; // ‚ö†Ô∏è –£–∫–∞–∂–∏ —Å–≤–æ–π IP-–∞–¥—Ä–µ—Å

// ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Axios-–∏–Ω—Å—Ç–∞–Ω—Å –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
const api = axios.create({
  baseURL: API_URL,
  headers: {
    "Content-Type": "application/json",
  },
});

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –æ–Ω –Ω—É–∂–µ–Ω)
export const setAuthToken = (token) => {
  if (token) {
    api.defaults.headers.common["Authorization"] = `Bearer ${token}`;
  } else {
    delete api.defaults.headers.common["Authorization"];
  }
};

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
export const fetchActiveOrders = async () => {
  try {
    const { data } = await api.get("/orders");
    return data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:", error);
    return [];
  }
};

// ‚úÖ –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –∫—É—Ä—å–µ—Ä–æ–º
export const acceptOrder = async (orderId) => {
  try {
    const { data } = await api.post(`/orders/${orderId}/accept`);
    return data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞–∫–∞–∑–∞:", error);
    throw error;
  }
};

// ‚úÖ –°–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫—É—Ä—å–µ—Ä–∞ (–æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω)
export const toggleCourierStatus = async (status) => {
  try {
    const { data } = await api.post("/status", { status });
    return data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫—É—Ä—å–µ—Ä–∞:", error);
    throw error;
  }
};

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
export const updateDeliveryStatus = async (orderId, newStatus) => {
  try {
    const { data } = await api.post(`/orders/${orderId}/status`, { status: newStatus });
    return data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:", error);
    throw error;
  }
};

// ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
export const completeDelivery = async (orderId) => {
  try {
    const { data } = await api.post(`/orders/${orderId}/complete`);
    return data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:", error);
    throw error;
  }
};

// ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞
export const updateCourierLocation = async (lat, lng) => {
  try {
    const { data } = await api.post("/update-location", { lat, lng });
    return data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞:", error);
    throw error;
  }
};

