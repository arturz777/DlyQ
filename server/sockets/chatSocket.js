const { ChatMessage } = require("../models/models");

module.exports = function (io) {
  io.on("connection", (socket) => {
    console.log("üí¨ –ù–æ–≤—ã–π —Å–æ–∫–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω:", socket.id);

    socket.on("joinChat", (chatId) => {
      socket.join(`chat_${chatId}`);
      console.log(`üîó Socket ${socket.id} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É ${chatId}`);
    });

    socket.on("joinAdminNotifications", () => {
      socket.join("admin_notifications");
      console.log(`üõéÔ∏è Socket ${socket.id} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ admin_notifications`);
    });

    socket.on("sendMessage", async (data) => {
      const { chatId, senderId, senderRole, text } = data;
      console.log("üì® –ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:", data);

      try {
        const newMessage = await ChatMessage.create({
          chatId,
          senderId,
          senderRole,
          text,
          isRead: false,
        });

         console.log("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ë–î:", newMessage); 

        io.to(`chat_${chatId}`).emit("receiveMessage", newMessage);
        io.to("admin_notifications").emit("newChatMessage", newMessage);
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err);
      }
    });

    socket.on("readMessages", ({ chatId, userId }) => {
      io.emit("readMessages", { chatId, userId });
    });

    socket.on("disconnect", () => {
      console.log("‚ùå Socket –æ—Ç–∫–ª—é—á–∏–ª—Å—è:", socket.id);
    });
  });
};
